{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"textContent\"];\nconst _hoisted_2 = [\"textContent\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"span\", {\n    textContent: _toDisplayString(_ctx.seconds / 60),\n    id: \"minutes\"\n  }, null, 8 /* PROPS */, _hoisted_1), _createTextVNode(\":\"), _createElementVNode(\"span\", {\n    textContent: _toDisplayString(_ctx.seconds % 60),\n    id: \"seconds\"\n  }, null, 8 /* PROPS */, _hoisted_2)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","_ctx","seconds","id"],"sources":["/Users/jakub.stribrny/Documents/GitHub/timer/src/components/RobotGameTimer.vue"],"sourcesContent":["<script>\nimport {onMounted} from \"vue\";\n\nexport default {\n  \n}\n\n/*function countdown(seconds) {\n  if (true != false) {\n\n  }\n}*/\n\nlet interval = 1000; // ms\nlet expected = Date.now();\n\nfunction stepDown(sec) {\n  let dt = Date.now() - expected;\n  sec -= 1\n  //props.seconds.value = sec\n  seconds = sec\n  expected += interval\n  if (sec > 0) {\n    setTimeout(() => {stepDown(sec)}, Math.max(0, interval - dt))\n  }\n}\n\n/*function step(seconds) {\n  let dt = Date.now() - expected;\n  if (dt < interval) {\n    console.log(\"problem\")\n  }\n\n  seconds += interval/1000;\n  setTimeout(function () {step(seconds)}, Math.max(0, interval - dt))\n}*/\n\nonMounted(() => {\n  //setTimeout(function () {step(150)}, interval);\n  stepDown(seconds)\n})\n</script>\n\n<template>\n  <div>\n   <span v-text=\"(seconds / 60)\" id=\"minutes\"></span>:<span v-text=\"(seconds % 60)\" id=\"seconds\"></span>\n  </div>\n</template>\n\n<style scoped>\n\n</style>"],"mappings":";;;;uBA4CEA,mBAAA,CAEM,cADLC,mBAAA,CAAkD;iBAA5CC,gBAAA,CAASC,IAAA,CAAAC,OAAO;IAAQC,EAAE,EAAC;wDAAiB,GAAC,GAAAJ,mBAAA,CAAkD;iBAA5CC,gBAAA,CAASC,IAAA,CAAAC,OAAO;IAAQC,EAAE,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}