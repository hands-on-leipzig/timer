{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <span v-bind=\\\"minutes.value\\\" id=\\\"minutes\\\"></span>:<span v-bind=\\\"seconds.value\\\" id=\\\"seconds\\\"></span>\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode"],"sources":["/Users/jakub.stribrny/Documents/GitHub/timer/src/components/RobotGameTimer.vue"],"sourcesContent":["<script setup>\n\nimport {onMounted} from \"vue\";\n\n/*function countdown(seconds) {\n  if (true != false) {\n\n  }\n}*/\n\nlet interval = -1000; // ms\nlet expected = Date.now() + interval;\n\n\nfunction step() {\n  let dt = Date.now() - expected;\n  console.log(dt)\n  if (dt < interval) {\n    console.log(\"problem\")\n  }\n\n  expected += interval;\n  console.log(expected)\n  setTimeout(step, Math.max(0, interval - dt))\n}\n\nonMounted(() => {\n  setTimeout(step, interval);\n})\n</script>\n\n<template>\n  <div>\n   <!-- <span v-bind=\"minutes.value\" id=\"minutes\"></span>:<span v-bind=\"seconds.value\" id=\"seconds\"></span>-->\n  </div>\n</template>\n\n<style scoped>\n\n</style>"],"mappings":";;uBAgCEA,mBAAA,CAEM,cADLC,mBAAA,gHAA2G,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}