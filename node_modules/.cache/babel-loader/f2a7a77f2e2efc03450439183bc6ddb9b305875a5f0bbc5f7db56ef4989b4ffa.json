{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <span v-bind=\\\"minutes.value\\\" id=\\\"minutes\\\"></span>:<span v-bind=\\\"seconds.value\\\" id=\\\"seconds\\\"></span>\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode"],"sources":["/Users/jakub.stribrny/Documents/GitHub/timer/src/components/RobotGameTimer.vue"],"sourcesContent":["<script setup>\n\nimport {onMounted} from \"vue\";\n\n/*function countdown(seconds) {\n  if (true != false) {\n\n  }\n}*/\n\nlet interval = 1000; // ms\nlet expected = Date.now() + interval;\n\nfunction stepDown(sec) {\n  let dt = Date.now() - expected;\n  sec -= 1\n  console.log(sec)\n  expected += interval\n  if (sec > 0) {\n    setTimeout(() => {stepDown(sec)}, Math.max(0, interval - dt))\n  }\n}\n\n/*function step(seconds) {\n  let dt = Date.now() - expected;\n  if (dt < interval) {\n    console.log(\"problem\")\n  }\n\n  seconds += interval/1000;\n  setTimeout(function () {step(seconds)}, Math.max(0, interval - dt))\n}*/\n\nonMounted(() => {\n  //setTimeout(function () {step(150)}, interval);\n  stepDown(150)\n})\n</script>\n\n<template>\n  <div>\n   <!-- <span v-bind=\"minutes.value\" id=\"minutes\"></span>:<span v-bind=\"seconds.value\" id=\"seconds\"></span>-->\n  </div>\n</template>\n\n<style scoped>\n\n</style>"],"mappings":";;uBAwCEA,mBAAA,CAEM,cADLC,mBAAA,gHAA2G,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}